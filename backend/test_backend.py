import os
import sys
import requests
from dotenv import load_dotenv
import json

# T·∫£i bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()

def test_backend_connection():
    print("üîç Ki·ªÉm tra k·∫øt n·ªëi Backend")
    
    # Gi·∫£ s·ª≠ backend ch·∫°y tr√™n localhost:8000
    BACKEND_URL = "http://localhost:8000"
    
    try:
        # Th·ª≠ k·∫øt n·ªëi root endpoint
        root_response = requests.get(f"{BACKEND_URL}/")
        print("‚úÖ K·∫øt n·ªëi root endpoint th√†nh c√¥ng!")
        print("Ph·∫£n h·ªìi:")
        print(json.dumps(root_response.json(), indent=2, ensure_ascii=False))
        
        # N·∫øu c√≥ endpoint chat, th·ª≠ k·∫øt n·ªëi
        # L∆ØU √ù: C·∫ßn c√≥ token ƒë·ªÉ test
        # Thay YOUR_TOKEN b·∫±ng token th·ª±c t·∫ø
        chat_response = requests.post(
            f"{BACKEND_URL}/chat/ask", 
            json={
                "messages": [{"role": "user", "content": "Xin ch√†o"}]
            },
            headers={
                "Authorization": "Bearer YOUR_TOKEN",
                "Content-Type": "application/json"
            }
        )
        
        print("\nüì¨ Th·ª≠ g·ªçi chat API:")
        print(f"Status Code: {chat_response.status_code}")
        print("Ph·∫£n h·ªìi:")
        print(json.dumps(chat_response.json(), indent=2, ensure_ascii=False))
        
    except requests.ConnectionError:
        print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi Backend")
    
    except requests.RequestException as e:
        print(f"‚ùå L·ªói request: {e}")

if __name__ == "__main__":
    test_backend_connection()