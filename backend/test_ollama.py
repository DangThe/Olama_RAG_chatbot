import os
import sys
import requests
from dotenv import load_dotenv
import traceback
import json

# T·∫£i bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()

# L·∫•y c·∫•u h√¨nh Ollama
OLLAMA_URL = os.getenv("OLLAMA_URL")
OLLAMA_MODEL = os.getenv("OLLAMA_MODEL")

def test_ollama_connection():
    print("üîç Ki·ªÉm tra k·∫øt n·ªëi Ollama")
    print(f"URL: {OLLAMA_URL}")
    print(f"Model: {OLLAMA_MODEL}")

    try:
        # Th·ª≠ chat
        chat_response = requests.post(
            f"{OLLAMA_URL}/chat",
            json={
                "model": OLLAMA_MODEL,
                "messages": [
                    {"role": "user", "content": "Xin ch√†o, gi·ªõi thi·ªáu v·ªÅ b·∫£n th√¢n"}
                ],
                "stream": False
            },
            timeout=10
        )
        
        print("\nüì¨ Th·ª≠ g·ªçi chat API:")
        print(f"Status Code: {chat_response.status_code}")
        
        if chat_response.status_code == 200:
            response_data = chat_response.json()
            print("‚úÖ Nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi t·ª´ Ollama!")
            print("Ph·∫£n h·ªìi chi ti·∫øt:")
            print(json.dumps(response_data, indent=2, ensure_ascii=False))
        else:
            print(f"‚ùå L·ªói: {chat_response.text}")

    except requests.ConnectionError as e:
        print("‚ùå L·ªói k·∫øt n·ªëi: Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi Ollama")
        print(f"Chi ti·∫øt: {e}")
        traceback.print_exc()

    except requests.Timeout:
        print("‚ùå L·ªói: H·∫øt th·ªùi gian k·∫øt n·ªëi")

    except requests.RequestException as e:
        print(f"‚ùå L·ªói request: {e}")
        traceback.print_exc()

    except Exception as e:
        print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    test_ollama_connection()